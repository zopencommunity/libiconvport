# bump: libiconv-version /LIBICONV_VERSION="(.*)"/ https://ftp.gnu.org/gnu/libiconv/|re:/href="libiconv-([\d.]+).tar.gz"/$1/|semver:*
LIBICONV_VERSION="1.18"

export ZOPEN_BUILD_LINE="STABLE" # Default build line
export ZOPEN_CATEGORIES="library"
export ZOPEN_STABLE_URL="https://ftp.gnu.org/pub/gnu/libiconv/libiconv-${LIBICONV_VERSION}.tar.gz"
export ZOPEN_STABLE_DEPS="make gettext automake autoconf perl m4 gperf sed coreutils diffutils findutils groff bash zlib"

export ZOPEN_DEV_URL="https://git.savannah.gnu.org/git/libiconv.git"
export ZOPEN_DEV_DEPS="make gettext automake autoconf perl m4 gperf sed coreutils diffutils findutils groff bash zlib"
export ZOPEN_EXTRA_CONFIGURE_OPTS="--enable-extra-encodings"

export ZOPEN_CHECK_OPTS='check -i'

zopen_post_buildenv()
{
  if [ "$ZOPEN_BUILD_LINE" = "DEV" ]; then
    export ZOPEN_BOOTSTRAP='./autopull.sh'
    export ZOPEN_BOOTSTRAP_OPTS="&& ./autogen.sh"
  fi
}

zopen_check_results()
{
  dir="$1"
  pfx="$2"
  chk="$1/$2_check.log"

  totalTests=199
  testsRun=$(grep '/bin/bash ./check-' "${chk}" | wc -l)
  actualFailures=$(grep  'Error .* (ignored)' "$chk}" | wc -l)
  echo "totalTests:${totalTests}"
  echo "expectedFailures:1"
  echo "actualFailures:${actualFailures}"
}

zopen_append_to_env()
{
cat <<ZZ
if [ ! -z "\$ZOPEN_IN_ZOPEN_BUILD" ]; then
  export ZOPEN_EXTRA_CFLAGS="\${ZOPEN_EXTRA_CFLAGS} -I\$PWD/include"
  export ZOPEN_EXTRA_CXXFLAGS="\${ZOPEN_EXTRA_CXXFLAGS} -I\$PWD/include"
  export ZOPEN_EXTRA_LDFLAGS="\${ZOPEN_EXTRA_LDFLAGS} -L\$PWD/lib"
  export ZOPEN_EXTRA_LIBS="\${ZOPEN_EXTRA_LIBS} -liconv"

fi
ZZ
}

export ZOPEN_RUNTIME_DEPS=""

zopen_get_version() {
  ./src/iconv --version | head -1 | awk -F" |)" '{ print $4 }'
}

zopen_append_to_zoslib_env() {
#
# The following environment variable controls how new line conversion is done
# If you run under USS, you _probably_ want this
#
cat <<EOF
ICONV_EBCDIC_ZOS_UNIX|set|1
EOF
}

zopen_install_caveats()
{
cat <<ZZ
Iconv has been installed with the prefix "zot" under bin/iconv to avoid collision with z/OS /bin/ tools.
If you prefer to use iconv without the zot prefix, source zopen-config with the option --override-zos-tools.
Or add \$ZOPEN_ROOTFS/usr/local/altbin to your \$PATH.
ZZ
}

zopen_post_install()
{
  mv $ZOPEN_INSTALL_DIR/bin/iconv $ZOPEN_INSTALL_DIR/bin/zoticonv
  mkdir $ZOPEN_INSTALL_DIR/altbin
  ln -s ../bin/zoticonv $ZOPEN_INSTALL_DIR/altbin/iconv
}
